// Notify current state on startup
rule "Startup"
when
    System started
then
    logInfo("RuleEngine", "Rule at system startup")
    val actions = getActions("mqtt","mqtt:broker:pshActor1")
    actions.publishMQTT("/Pi1/In/Admin","NOTIFY_CURRENT_STATE")    
end


// Switch on lights
rule "Start night lights on sunset"
when
    Channel "astro:sun:home:set#event" triggered
then
    switch(receivedEvent.getEvent()) {
        case "START": {
            gNightLights.sendCommand(ON)
        }
    }
end

// Switch on night lights early morning
rule "Switch on night lights early morning"
when
    Time cron "0 30 6 * * ?"
then
    if (Sun_Elevation.state < 0) {
        gNightLights.sendCommand(ON)
    }    
end

// Switch on Xmas lights
rule "Switch on Xmas lights"
when
    Time cron "0 0 17 6-31 DEC ? *" or
    Time cron "0 0 17 ? JAN *"
then
    gXmasLights.sendCommand(ON)
    gNightLights.sendCommand(OFF)
end

// Switch off all night lights every day at 23:00
rule "Off night lights"
when
    Time cron "0 0 23 * * ?"
then
    gNightLights.sendCommand(OFF)
    gXmasLights.sendCommand(OFF)
end

// Switch off lights
rule "Switch off night lights on sunrise"
when
    Channel "astro:sun:home:rise#event" triggered
then
    switch(receivedEvent.getEvent()) {
        case "START": {
            gNightLights.sendCommand(OFF)
        }
    }
end
